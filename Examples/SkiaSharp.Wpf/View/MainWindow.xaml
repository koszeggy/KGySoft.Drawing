<Window x:Class="KGySoft.Examples.Skia.Wpf.View.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:viewModel="clr-namespace:KGySoft.Drawing.Examples.SkiaSharp.Wpf.ViewModel"
        xmlns:skia="clr-namespace:SkiaSharp.Views.WPF;assembly=SkiaSharp.Views.WPF"
        mc:Ignorable="d"
        d:DataContext="{d:DesignInstance viewModel:MainViewModel, IsDesignTimeCreatable=True}"
        Title="KGy SOFT Drawing SkiaSharp/WPF Example App"
        Width="400" Height="500">
    <Window.Resources>
        <Style TargetType="TextBox">
            <Style.Triggers>
                <Trigger Property="Validation.HasError" Value="True">
                    <Setter Property="Validation.ErrorTemplate">
                        <Setter.Value>
                            <ControlTemplate>
                                <AdornedElementPlaceholder Name="adorner">
                                    <Polygon HorizontalAlignment="Right" VerticalAlignment="Top"
                                             Points="10,10 10,0 0,0"
                                             Fill="Red"
                                             ToolTip="{Binding ElementName=adorner, Path=AdornedElement.(Validation.Errors)/ErrorContent}"/>
                                </AdornedElementPlaceholder>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </Style.Triggers>
        </Style>
    </Window.Resources>

    <Grid Margin="5">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="120"/>
            <ColumnDefinition/>
        </Grid.ColumnDefinitions>

        <!--Image File-->
        <TextBlock Grid.Row="0" Grid.Column="0">Image File:</TextBlock>
        <TextBox Grid.Row="0" Grid.Column="1"
                 Text="{Binding ImageFile, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}"
                 ToolTip="The base image file to display"/>

        <!--Image Overlay File-->
        <CheckBox Grid.Row="1" Grid.Column="0"
                  IsChecked="{Binding ShowOverlay}"
                  ToolTip="Check to blend an overlay image with the base image">Image Overlay:</CheckBox>
        <TextBox Grid.Row="1" Grid.Column="1"
                 Text="{Binding OverlayFile, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}"
                 ToolTip="The overlay image to display"
                 IsEnabled="{Binding ShowOverlay}"/>

        <!--Pixel Format-->
        <TextBlock Grid.Row="2" Grid.Column="0">Pixel Format:</TextBlock>
        <Grid Grid.Row="2" Grid.Column="1">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="80"/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>

            <!--a.) Color Type-->
            <TextBlock Grid.Row="0" Grid.Column="0">Color Type:</TextBlock>
            <ComboBox Grid.Row="0" Grid.Column="1"
                      ItemsSource="{Binding ColorTypes, Mode=OneTime}"
                      SelectedItem="{Binding SelectedColorType}"
                      ToolTip="The desired color type. For lower bit-per-pixel formats it is recommended to enable dithering.&#x0d;&#x0d;Using high color quantizers with low bit-per-pixel formats may end up in incorrect dithering."/>

            <!--b.) Alpha Type-->
            <TextBlock Grid.Row="1" Grid.Column="0">Alpha Type:</TextBlock>
            <ComboBox Grid.Row="1" Grid.Column="1"
                      ItemsSource="{Binding AlphaTypes, Mode=OneTime}"
                      SelectedItem="{Binding SelectedAlphaType}"
                      ToolTip="The desired alpha type. For color types without alpha or with alpha only the selected value is indifferent."/>

            <!--c.) Color Space-->
            <TextBlock Grid.Row="2" Grid.Column="0">Color Space:</TextBlock>
            <ComboBox Grid.Row="2" Grid.Column="1"
                      ItemsSource="{Binding ColorSpaces, Mode=OneTime}"
                      SelectedItem="{Binding SelectedColorSpace}"
                      ToolTip="The actual color space of the pixel format. Note that you can force working in the linear color space by the switch below even if the actual color space is sRGB.&#x0d;&#x0d;Some low bit-per-channel formats have better quality if their actual color space is sRGB and they are forced to work in the linear color space."/>
        </Grid>

        <!-- Back Color -->
        <Grid Grid.Row="3" Grid.Column="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="80"/>
                <ColumnDefinition Width="80"/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>
            <TextBlock Grid.Column="0">Back Color:</TextBlock>
            <TextBox Grid.Column="1"
                     Text="{Binding BackColorText, ValidatesOnDataErrors=True}"
                     IsEnabled="{Binding IsBackColorEnabled}"
                     ToolTip="When the selected pixel format does not support gradient transparency, or dithering is selected, then specifies the background color.&#x0d;Alpha pixels that are considered opaque are blended with this color during the processing.&#x0d;Hex #AARRGGBB format is also supported."
                     ToolTipService.ShowOnDisabled="True"/>
            <Rectangle Grid.Column="2" Fill="{Binding BackColorBrush}" />
        </Grid>

        <!-- Force Linear Color Space -->
        <CheckBox Grid.Row="4" Grid.Column="0" Grid.ColumnSpan="2"
                  IsChecked="{Binding ForceLinearWorkingColorSpace}"
                  ToolTip="Forces to use the linear color space for blending, quantizing and dithering even if the actual color space of the pixel format is sRGB.&#x0d;&#x0d;Please note though that if the result has transparency, the blending with the background is performed by the rendering engine.&#x0d;Use quantizers without alpha or set alpha threshold to zero to avoid mixing sRGB and linear blending.&#x0d;&#x0d;Similarly, resizing the preview image is also performed by the rendering engine, which is not affected by this option."
                  Content="Force Linear Working Color Space"/>

        <!--Quantizer-->
        <CheckBox Grid.Row="5" Grid.Column="0"
                     IsChecked="{Binding UseQuantizer, Mode=TwoWay}" 
                     ToolTip="Check to use a quantizer. For lower bit-per-pixel quantizers it is recommended to enable dithering."
                     Content="Quantizer:"/>
        <ComboBox Grid.Row="5" Grid.Column="1"
                ItemsSource="{Binding Quantizers, Mode=OneTime}"
                SelectedItem="{Binding SelectedQuantizer, Mode=TwoWay}"
                IsEnabled="{Binding UseQuantizer}"
                ToolTip="The desired quantizer to use. For lower bit-per-pixel formats it is recommended to enable dithering."/>

        <!-- a.) Alpha Threshold -->
        <Grid Grid.Row="6" Grid.Column="1"
              Visibility="{Binding AlphaThresholdVisibility}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="100"/>
                <ColumnDefinition Width="75"/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>
            <TextBlock Grid.Column="0">Alpha Threshold:</TextBlock>
            <Slider Grid.Column="1"
                    Maximum="255"
                    TickFrequency="25"
                    TickPlacement="BottomRight"
                    SmallChange="1" LargeChange="25"
                    Value="{Binding AlphaThreshold}"
                    ToolTip="Specifies the alpha threshold under which the pixel is considered transparent.&#x0d;If 0, then the result will not have any transparent pixels.&#x0d;If 255, then all partially transparent pixels will turn transparent."
                    ToolTipService.ShowOnDisabled="True"/>
            <TextBlock Grid.Column="2" Text="{Binding AlphaThreshold, Mode=OneWay}"/>
        </Grid>

        <!-- b.) White Threshold -->
        <Grid Grid.Row="7" Grid.Column="1"
              Visibility="{Binding WhiteThresholdVisibility}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="100"/>
                <ColumnDefinition Width="75"/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>
            <TextBlock Grid.Column="0">White Threshold:</TextBlock>
            <Slider Grid.Column="1"
                    Maximum="255"
                    TickFrequency="25"
                    TickPlacement="BottomRight"
                    SmallChange="1" LargeChange="25"
                    Value="{Binding WhiteThreshold}"
                    ToolTip="Determines the lowest input brightness to consider the result color white."
                    ToolTipService.ShowOnDisabled="True"/>
            <TextBlock Grid.Column="2" Text="{Binding WhiteThreshold, Mode=OneWay}"/>
        </Grid>

        <!-- c.) Palette Size -->
        <Grid Grid.Row="8" Grid.Column="1"
              Visibility="{Binding MaxColorsVisibility}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="100"/>
                <ColumnDefinition Width="75"/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>
            <TextBlock Grid.Column="0">Palette Size:</TextBlock>
            <Slider Grid.Column="1"
                    Minimum="2"
                    Maximum="255"
                    TickFrequency="25"
                    TickPlacement="BottomRight"
                    SmallChange="1" LargeChange="25"
                    Value="{Binding PaletteSize}"
                    ToolTip="Determines the lowest input brightness to consider the result color white."
                    ToolTipService.ShowOnDisabled="True"/>
            <TextBlock Grid.Column="2" Text="{Binding PaletteSize, Mode=OneWay}"/>
        </Grid>

        <!--Ditherer-->
        <CheckBox Grid.Row="9" Grid.Column="0"
                  IsChecked="{Binding UseDithering}"
                  ToolTip="Check to use a ditherer. For high bit-per-pixel formats it makes little sense as for those its only practical effect is just removing possible partial transparency.">Ditherer:</CheckBox>
        <ComboBox Grid.Row="9" Grid.Column="1"
                  ItemsSource="{Binding Ditherers, Mode=OneTime}"
                  SelectedItem="{Binding SelectedDitherer}"
                  IsEnabled="{Binding UseDithering}"
                  ToolTip="The selected ditherer.&#x0d;Error diffusion ditherers do not support parallel processing but usually produce a high quality result.&#x0d;Others support parallel processing but the strength auto-calibration might not be optimal for a palette with unevenly distributed colors."
                  ToolTipService.ShowOnDisabled="True"/>

        <!--Image-->
        <skia:SKElement x:Name="canvas" Grid.Row="10" Grid.Column="0" Grid.ColumnSpan="2"
                        PaintSurface="SKElement_OnPaintSurface"/>

        <!--Progress Bar-->
        <TextBlock Grid.Row="11" Grid.Column="0"
                   Text="{Binding ProgressText}"
                   Visibility="{Binding ProgressVisibility}"/>
        <ProgressBar Grid.Row="11" Grid.Column="1"
                     IsIndeterminate="{Binding IsProgressIndeterminate}"
                     Maximum="{Binding ProgressMaxValue}"
                     Value="{Binding ProgressValue}"
                     Visibility="{Binding ProgressVisibility}"/>

    </Grid>
</Window>
